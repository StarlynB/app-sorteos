{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SorteoComponent = class SorteoComponent {\n  constructor(_participanteServices) {\n    this._participanteServices = _participanteServices;\n    this.participants = [];\n    this.winner = null;\n    this.participants = this._participanteServices.getData('participante') || [];\n  }\n  pickWinner() {\n    if (this.participants.length > 0) {\n      // Obtener un índice aleatorio que no sea el mismo que el ganador anterior\n      let randomIndex;\n      do {\n        randomIndex = Math.floor(Math.random() * this.participants.length);\n      } while (this.winner === this.participants[randomIndex]);\n      this.winner = this.participants[randomIndex];\n      setTimeout(() => {\n        this.resetWinner();\n      }, 7000);\n    }\n  }\n  resetWinner() {\n    this.winner = null;\n  }\n  addParticipant(participantInput) {\n    const name = participantInput.value.trim();\n    if (name) {\n      this.participants.push(name);\n      this._participanteServices.saveData('participants', this.participants);\n      participantInput.value = ''; // Limpiar el input\n    }\n  }\n\n  deleteParticipant(name) {\n    const index = this.participants.indexOf(name);\n    if (index !== -1) {\n      this.participants.splice(index, 1);\n      this._participanteServices.saveData('participante', this.participants);\n    }\n  }\n};\nSorteoComponent = __decorate([Component({\n  selector: 'app-sorteo',\n  templateUrl: './sorteo.component.html',\n  styleUrls: ['./sorteo.component.scss']\n})], SorteoComponent);","map":{"version":3,"names":["Component","SorteoComponent","constructor","_participanteServices","participants","winner","getData","pickWinner","length","randomIndex","Math","floor","random","setTimeout","resetWinner","addParticipant","participantInput","name","value","trim","push","saveData","deleteParticipant","index","indexOf","splice","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\User\\Desktop\\Sorteo_Page\\sorteo-app\\sorteo-app\\src\\app\\pages\\components\\sorteo\\sorteo.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PaticipantesService } from '../../services/paticipantes.service';\nimport { } from \"@iconify/icons-ic/twotone-menu\"\n\n\n@Component({\n  selector: 'app-sorteo',\n  templateUrl: './sorteo.component.html',\n  styleUrls: ['./sorteo.component.scss']\n})\nexport class SorteoComponent {\n\n\n  participants: string[] = [];\n  winner: string | null = null;\n\n  constructor(private _participanteServices: PaticipantesService) {\n    this.participants = this._participanteServices.getData('participante') || [];\n  }\n\n  pickWinner(): void {\n    if (this.participants.length > 0) {\n      // Obtener un índice aleatorio que no sea el mismo que el ganador anterior\n      let randomIndex;\n      do {\n        randomIndex = Math.floor(Math.random() * this.participants.length);\n      } while (this.winner === this.participants[randomIndex]);\n\n      this.winner = this.participants[randomIndex];\n      setTimeout(() => {\n        this.resetWinner();\n      }, 7000);\n    }\n  }\n\n\n  resetWinner(): void {\n    this.winner = null;\n  }\n\n\n  addParticipant(participantInput: HTMLInputElement): void {\n    const name = participantInput.value.trim();\n    if (name) {\n      this.participants.push(name);\n      this._participanteServices.saveData('participants', this.participants);\n      participantInput.value = ''; // Limpiar el input\n    }\n  }\n\n\n  deleteParticipant(name: string) {\n    const index = this.participants.indexOf(name);\n    if (index !== -1) {\n      this.participants.splice(index, 1);\n      this._participanteServices.saveData('participante', this.participants);\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAM1BC,YAAoBC,qBAA0C;IAA1C,KAAAA,qBAAqB,GAArBA,qBAAqB;IAHzC,KAAAC,YAAY,GAAa,EAAE;IAC3B,KAAAC,MAAM,GAAkB,IAAI;IAG1B,IAAI,CAACD,YAAY,GAAG,IAAI,CAACD,qBAAqB,CAACG,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE;EAC9E;EAEAC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACH,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;MAChC;MACA,IAAIC,WAAW;MACf,GAAG;QACDA,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACR,YAAY,CAACI,MAAM,CAAC;OACnE,QAAQ,IAAI,CAACH,MAAM,KAAK,IAAI,CAACD,YAAY,CAACK,WAAW,CAAC;MAEvD,IAAI,CAACJ,MAAM,GAAG,IAAI,CAACD,YAAY,CAACK,WAAW,CAAC;MAC5CI,UAAU,CAAC,MAAK;QACd,IAAI,CAACC,WAAW,EAAE;MACpB,CAAC,EAAE,IAAI,CAAC;;EAEZ;EAGAA,WAAWA,CAAA;IACT,IAAI,CAACT,MAAM,GAAG,IAAI;EACpB;EAGAU,cAAcA,CAACC,gBAAkC;IAC/C,MAAMC,IAAI,GAAGD,gBAAgB,CAACE,KAAK,CAACC,IAAI,EAAE;IAC1C,IAAIF,IAAI,EAAE;MACR,IAAI,CAACb,YAAY,CAACgB,IAAI,CAACH,IAAI,CAAC;MAC5B,IAAI,CAACd,qBAAqB,CAACkB,QAAQ,CAAC,cAAc,EAAE,IAAI,CAACjB,YAAY,CAAC;MACtEY,gBAAgB,CAACE,KAAK,GAAG,EAAE,CAAC,CAAC;;EAEjC;;EAGAI,iBAAiBA,CAACL,IAAY;IAC5B,MAAMM,KAAK,GAAG,IAAI,CAACnB,YAAY,CAACoB,OAAO,CAACP,IAAI,CAAC;IAC7C,IAAIM,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACnB,YAAY,CAACqB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAClC,IAAI,CAACpB,qBAAqB,CAACkB,QAAQ,CAAC,cAAc,EAAE,IAAI,CAACjB,YAAY,CAAC;;EAE1E;CAED;AAjDYH,eAAe,GAAAyB,UAAA,EAL3B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACW5B,eAAe,CAiD3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}